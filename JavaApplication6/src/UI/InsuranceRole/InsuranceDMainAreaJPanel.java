/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.InsuranceRole;

import model.EcoSystem;
import model.Enterprise.Enterprise;
import model.Organization.Organization;
import model.UserAccount.UserAccount;
import model.WorkQueue.InsuranceWorkRequest;
import model.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sushmithaprathap
 */
public class InsuranceDMainAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private Organization organization;
    //private LabOrganization organization;

    private Enterprise enterprise;

    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public InsuranceDMainAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, EcoSystem business, Enterprise enterprise) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        //this.labOrganization = (LabOrganization)organization;
        this.enterprise = enterprise;
        //this.business = business;
        this.organization = organization;
        jLabel5.setText("Welcome " + account.getEmp().getNameVar());
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);
        //enterprise.getWorkQueue().getWorkRequestList();//.add(request);
        for (WorkRequest request : enterprise.getOrgWq().getWorkRequestArray()) {
            // List<LabTest> labTestList = ((LabTechnicianWorkRequest)request).getAppointment().getLabTestList().getLabTestList();
            if (request instanceof InsuranceWorkRequest && (request.getReceiver() == null || request.getReceiver() == userAccount)) {
                //for(LabTest labTest : labTestList)
                // {

                Object[] row = new Object[8];
                row[0] = request.getSender();
                //row[1] = request.getSender().getEmployee().getName();
                row[1] = request.getReceiver() == null ? null : request.getReceiver().getEmp().getNameVar();
                row[2] = ((InsuranceWorkRequest) request).getPatient();

                row[3] = request.getStatus() == null ? "New" : request.getStatus();
                //LabTest lt= ((InsuranceWorkRequest)request).getLabTest();
                row[4] = ((InsuranceWorkRequest) request).getPatient().getInsId();
                row[5] = ((InsuranceWorkRequest) request).getAmount();
                row[6] = request.getMsg();
                row[7] = request;
                model.addRow(row);
                // }//inner for
            }//if
        }//outer for
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        assignJButton = new javax.swing.JButton();
        processJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnNewInsurance = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setBackground(new java.awt.Color(204, 204, 204));
        workRequestJTable.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 204, 255)));
        workRequestJTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender", "Receiver", "Patient", "Request Status", "InsuranceID", "Amount", "Message", "Request ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        workRequestJTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 910, 170));

        assignJButton.setBackground(new java.awt.Color(9, 87, 136));
        assignJButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        assignJButton.setForeground(new java.awt.Color(255, 255, 255));
        assignJButton.setText("Assign to me");
        assignJButton.setPreferredSize(new java.awt.Dimension(167, 40));
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 320, 190, 60));

        processJButton.setBackground(new java.awt.Color(9, 87, 136));
        processJButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        processJButton.setForeground(new java.awt.Color(255, 255, 255));
        processJButton.setText("Process");
        processJButton.setPreferredSize(new java.awt.Dimension(167, 40));
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });
        add(processJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 530, 190, 60));

        refreshJButton.setBackground(new java.awt.Color(9, 87, 136));
        refreshJButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        refreshJButton.setForeground(new java.awt.Color(255, 255, 255));
        refreshJButton.setText("Refresh");
        refreshJButton.setPreferredSize(new java.awt.Dimension(167, 40));
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 390, 190, 60));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/Images/ins.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 300, 580, 400));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(9, 87, 136));
        jLabel5.setText("Welcome back!");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 30, 440, 37));

        btnNewInsurance.setBackground(new java.awt.Color(9, 87, 136));
        btnNewInsurance.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnNewInsurance.setForeground(new java.awt.Color(255, 255, 255));
        btnNewInsurance.setText("Insurance");
        btnNewInsurance.setPreferredSize(new java.awt.Dimension(167, 40));
        btnNewInsurance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewInsuranceActionPerformed(evt);
            }
        });
        add(btnNewInsurance, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 460, 190, 60));
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!");
            return;
        }

        WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 7);

        if (request.getReceiver() != null) {
            JOptionPane.showMessageDialog(null, "Already assigned!");
            return;
        }

        WorkRequest lt = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 7);
        //lt.setReceiver(userAccount);
        //lt.setStatus("In Process");
        request.setReceiver(userAccount);
        request.setStatus("Pending");
        JOptionPane.showMessageDialog(null, "Assigned successfully!");
        populateTable();

    }//GEN-LAST:event_assignJButtonActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!");
            return;
        }

        WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 7);
        if (request.getReceiver() == null) {
            JOptionPane.showMessageDialog(null, "Please assign request before processing!");
            return;
        }
        //request.setStatus("Processing");
        //LabTest labtest = (LabTest) workRequestJTable.getValueAt(selectedRow, 4);
        InsuranceDWorkAreaJPanel processWorkRequestJPanel
                = new InsuranceDWorkAreaJPanel(userProcessContainer, userAccount, organization, business, request, enterprise);
        userProcessContainer.add("InsuranceDWorkAreaJPanel", processWorkRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_processJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void btnNewInsuranceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewInsuranceActionPerformed
        // TODO add your handling code here:

        ManageInsuranceJPanel processWorkRequestJPanel
                = new ManageInsuranceJPanel(userProcessContainer, enterprise.getOrgDir(), enterprise, userAccount);
        userProcessContainer.add("ManageInsuranceJPanel", processWorkRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_btnNewInsuranceActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton btnNewInsurance;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processJButton;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
